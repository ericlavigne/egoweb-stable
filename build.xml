<?xml version="1.0" encoding="UTF-8"?>
<project default="run" name="egoweb" basedir=".">

	<property name="src.dir" value="src"/>
	<property name="test.dir" value="test"/>
	<property name="lib.dir" value="lib"/>
	<property name="static.dir" value="static"/>
	<property name="build.dir" value="build"/>
	<property name="dist.dir" value="dist"/>
	<property name="main.class.web" value="net.sf.egonet.web.ServerGui" />
	<property name="launch4j.dir" location="lib/launch4j" />

	<path id="build.classpath">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar"/>
		</fileset>
	</path>
	
	<path id="run.classpath">
		<path refid="build.classpath"/>
		<pathelement path="${build.dir}"/>
	</path>

	<path id="launch4j.classpath">
		<fileset dir="launch4j">
			<include name="launch4j.jar" />
		</fileset>
		<fileset dir="launch4j/lib">
			<include name="xstream.jar" />
		</fileset>
	</path>
	
	<taskdef name="launch4j"
		classname="net.sf.launch4j.ant.Launch4jTask"
		classpath="${launch4j.dir}/launch4j.jar:${launch4j.dir}/lib/xstream.jar" />
	
	<target name="clean">
		<delete dir="${build.dir}" failonerror="false"/>
		<delete dir="${dist.dir}" failonerror="false"/>
	</target>

	<target name="compile">
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${dist.dir}"/>
		<javac destdir="${build.dir}" srcdir="${src.dir}" classpathref="build.classpath">
			<compilerarg value="-Xlint:unchecked" />
		</javac>
		<javac destdir="${build.dir}" srcdir="${test.dir}" classpathref="run.classpath">
			<compilerarg value="-Xlint:unchecked" />
		</javac>
		<copy todir="${build.dir}">
			<fileset dir="${src.dir}">
				<include name="**/*.*"/>
				<exclude name="**/*.java"/>
			</fileset>
			<fileset dir="${test.dir}">
				<include name="**/*.*"/>
				<exclude name="**/*.java"/>
			</fileset>
			<fileset dir="${static.dir}" />
		</copy>
	</target>

	<target name="run" depends="compile">
		<java classname="${main.class.web}" fork="true" classpathref="run.classpath" />
	</target>
	
	<target name="test" depends="compile">
		<mkdir dir="junittemp"/>
		<junit fork="true" forkmode="once" showoutput="true" printsummary="true"
			failureProperty="test.failure" tempdir="junittemp">
			<classpath>
				<path refid="run.classpath"/>
			</classpath>
			<formatter type="brief" usefile="false"/>
			<batchtest>
				<fileset dir="${build.dir}" includes="**/*Test*.class"/>
			</batchtest>
		</junit>
		<delete dir="junittemp" failonerror="false"/>
		<fail message="Test failed!" if="test.failure" />
	</target>
	
	<target name="jar" depends="compile,test">
		<jar jarfile="${dist.dir}/egoweb-stable.jar" duplicate="preserve">
			<manifest>
				<attribute name="Main-Class" value="${main.class.web}" />
			</manifest>
			
			<zipfileset dir="${build.dir}" />

			<zipfileset src="${lib.dir}/antlr-2.7.6.jar" />
			<zipfileset src="${lib.dir}/clojure-1.1.0.jar" />
			<zipfileset src="${lib.dir}/clojure-contrib-1.1.0.jar" />
			<zipfileset src="${lib.dir}/collections-generic-4.01.jar" />
			<zipfileset src="${lib.dir}/commons-collections-3.1.jar" />
			<zipfileset src="${lib.dir}/derby-10.5.3.1-svn912156.jar" />
			<zipfileset src="${lib.dir}/dom4j-1.6.1.jar" />
			<zipfileset src="${lib.dir}/functionalj.jar" />
			<zipfileset src="${lib.dir}/google-collect-1.0-rc2.jar" />
			<zipfileset src="${lib.dir}/hibernate-3.3.2.GA.jar" />
			<zipfileset src="${lib.dir}/javassist-3.9.0.GA.jar" />
			<zipfileset src="${lib.dir}/jcl-over-slf4j-1.5.2.jar" />
			<zipfileset src="${lib.dir}/jetty-6.1.18.jar" />
			<zipfileset src="${lib.dir}/jetty-util-6.1.18.jar" />
			<zipfileset src="${lib.dir}/joda-time-1.6.jar" />
			<zipfileset src="${lib.dir}/jta-1.1.jar" />
			<zipfileset src="${lib.dir}/jung-algorithms-2.0.jar" />
			<zipfileset src="${lib.dir}/jung-api-2.0.jar" />
			<zipfileset src="${lib.dir}/jung-graph-impl-2.0.jar" />
			<zipfileset src="${lib.dir}/jung-visualization-2.0.jar" />
			<zipfileset src="${lib.dir}/logback-classic-0.9.9.jar" />
			<zipfileset src="${lib.dir}/logback-core-0.9.9.jar" />
			<zipfileset src="${lib.dir}/opencsv-2.0.jar" />
			<zipfileset src="${lib.dir}/servlet-api-2.5-20081211.jar" />
			<zipfileset src="${lib.dir}/slf4j-api-1.5.8.jar" />
			<zipfileset src="${lib.dir}/uncommons-maths-1.2.jar" />
			<zipfileset src="${lib.dir}/wicket-1.3.6.jar" />
		</jar>
	</target>
	
	<target name="dist" depends="jar">
		<launch4j configFile="winwrap.xml" />
	</target>
</project>

